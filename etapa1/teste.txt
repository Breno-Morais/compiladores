__aa__
_d_d_
a90_d
aa
00099991111
90_d
int byte real == === != >>= ><= <<= print read else if do while return
01/13
0000/1111343
124701972409
, ; : ( ) [ ] { } = + - * / % < > & | ~

'a'
'\0'
'\n'
'\E'
'\t'
'\b'
'\r'
'\a'
'\''
'\"'
'\?'
'\\'
'\f'
'\v'

"teste==++()&*(%$#),.,.,.''';;;:___0\"9482038402943fkmsfs\n\""
"return""\n"


@                          yyyyyyy
$
#
'aaa'
'
"\""\"\n\n"
"teste
teste"
"\\n\\""
"\E"
"\\ wow     \    \\"
"haha \"

// aaaaaaaaa
// "teste==++()&*(%$#),.,.,.''';;;:___0\"9482038402943fkmsfs\n\"" int byte real == === != >>= ><= <<= print read else if do while return
/--
int main(int argc, char **argv) {
    int tok = 0;
    int t_3 = 0;

    t_3++;

    if(argc < 2) {
        fprintf(stderr, "Filename not specified\n");
        exit(1);
    }

    if((yyin = fopen(argv[1], "r")) == 0){
        fprintf(stderr, "Could'n open filename %s\n", argv[1]);
        exit(1);
    }

    while(isRunning()) {
        tok = yylex();
        if(!isRunning()) break;
        switch(tok) {
            case 256: fprintf(stderr, "KW_BYTE\n"); break;
            case 257: fprintf(stderr, "KW_INT\n"); break;
            case 258: fprintf(stderr, "KW_REAL\n"); break;
            case 261: fprintf(stderr, "KW_IF\n"); break;
            case 263: fprintf(stderr, "KW_ELSE\n"); break;
            case 264: fprintf(stderr, "KW_DO\n"); break;
            case 265: fprintf(stderr, "KW_WHILE\n"); break;
            case 266: fprintf(stderr, "KW_READ\n"); break;
            case 267: fprintf(stderr, "KW_PRINT\n"); break;
            case 268: fprintf(stderr, "KW_RETURN\n"); break;
            case 270: fprintf(stderr, "OPERATOR_LE\n"); break;
            case 271: fprintf(stderr, "OPERATOR_GE\n"); break;
            case 272: fprintf(stderr, "OPERATOR_EQ\n"); break;
            case 273: fprintf(stderr, "OPERATOR_DIF\n"); break;
            case 280: fprintf(stderr, "TK_IDENTIFIER: %s\n", yytext); break;
            case 281: fprintf(stderr, "LIT_INT: %s\n", yytext); break;
            case 282: fprintf(stderr, "LIT_CHAR: %s\n", yytext); break;
            case 283: fprintf(stderr, "LIT_REAL: %s\n", yytext); break;
            case 286: fprintf(stderr, "LIT_STRING: %s\n", yytext); break;
            case 300: fprintf(stderr, "%s\n", yytext); break;
            case 290: fprintf(stderr, "ERROR\n"); break;
            case '-': fprintf(stderr, ".\n"); break;
            case ',': fprintf(stderr, ",\n"); break;
            case ';': fprintf(stderr, ";\n"); break;
            case ':': fprintf(stderr, ":\n"); break;
            case '(': fprintf(stderr, "\(\n"); break;
            case ')': fprintf(stderr, ")\n"); break;
            case '[': fprintf(stderr, "\[\n"); break;
            case ']': fprintf(stderr, "]\n"); break;
            case '{': fprintf(stderr, "\{\n"); break;
            case '}': fprintf(stderr, "}\n"); break;
            case '=': fprintf(stderr, "=\n"); break;
            case '+': fprintf(stderr, "+\n"); break;
            case '*': fprintf(stderr, "*\n"); break;
            case '/': fprintf(stderr, "/\n"); break;
            case '%': fprintf(stderr, "%%\n"); break;
            case '<': fprintf(stderr, "<\n"); break;
            case '>': fprintf(stderr, ">\n"); break;
            case '&': fprintf(stderr, "&\n"); break;
            case '|': fprintf(stderr, "|\n"); break;
            case '~': fprintf(stderr, "~\n"); break;
        }
    }

    fprintf(stderr, "File had %d lines\n", getLineNumber());
}
--/